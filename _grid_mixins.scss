@import "grid_variables";

/**
 * Public mixin for the page container
 */
@mixin make-container () {
	margin-left: auto;
	margin-right: auto;
	max-width: $max-width;
}

/**
 * Public mixin for the grid row (container)
 */
@mixin make-row () {
	display: flex;
	flex-wrap: wrap;
	margin-left: $grid-fallback-gutter / -2;
	margin-right: $grid-fallback-gutter / -2;
}

/**
 * Public mixin for the base grid column definition
 */
@mixin make-col () {
	flex: 0 0 100%;
	// Prevent columns from becoming too narrow when at smaller grid tiers by
	// always setting `width: 100%;`. This works because we use `flex` values
	// later on to override this initial width.
	min-height: 1px; // Prevent collapsing
	padding-left: $grid-fallback-gutter / 2;
	padding-right: $grid-fallback-gutter / 2;
	width: 100%;
}

/**
 * Public mixin for column spanning
 */
@mixin make-col-span (
	$span: $grid-fallback-columns,
	$columns: $grid-fallback-columns
) {
	flex-basis: percentage($span / $columns);
	// Add a `max-width` to ensure content within each column does not blow out
	// the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
	// do not appear to require this.
	max-width: percentage($span / $columns);
}
